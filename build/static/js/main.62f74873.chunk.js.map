{"version":3,"sources":["App.js","responseHandler/index.js","Components/NewUserForm.js","Components/Settings.js","utils/index.js","Components/User.js","reportWebVitals.js","index.js"],"names":["resHandler","path","window","location","protocol","host","audio","Audio","ResponseHandler","statePair","socket","handle","response","data","state","setState","type","session","JSON","parse","url","id","history","pushState","status","currentTime","currentUser","document","querySelector","checked","play","users","roundLength","handleResponse","NewUserForm","addNewUser","onSubmit","e","nameInput","value","className","htmlFor","placeholder","name","maxLength","onKeyPress","key","onClick","Settings","sendData","onChange","target","roundLengthInput","newLength","msToTimeString","ms","minutes","Math","floor","seconds","User","user","time","skip","userId","searchparams","URLSearchParams","search","socketIOClient","showSettingsDialog","showHideSettings","textContent","classList","toggle","emit","sessionId","get","App","useState","params","useEffect","on","toString","action","enabled","length","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.62f74873.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport './App.css';\nimport { ResponseHandler } from './responseHandler';\nimport NewUserForm from './Components/NewUserForm';\nimport Settings from './Components/Settings';\nimport msToTimeString from './utils';\nimport User from './Components/User';\n\nconst searchparams = new URLSearchParams(window.location.search);\nlet resHandler;\nconst socket = socketIOClient();\nlet showSettingsDialog = true;\n\nconst showHideSettings = e => {\n  showSettingsDialog = !showSettingsDialog;\n  e.target.textContent = showSettingsDialog ? 'Hide settings' : 'Show Settings';\n  document.querySelector('.app__settings').classList.toggle('hidden');\n}\n\nsocket.emit('handshake', { sessionId: searchparams.get('sessionId') || 'new'});\n\nfunction App() {\n  const [state, setState] = useState({});\n\n  const sendData = params => {\n    socket.emit('data', { ...params, sessionId: state.id })\n  }\n\n  useEffect(() => {\n    resHandler = ResponseHandler({ state, setState }, socket);\n  }, [state]);\n\n  useEffect(() => {\n    socket.on('data', data => {\n      resHandler.handle(data);\n    });\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <header className=\"app__header\">\n        <h1 className=\"header__mob\">MOB</h1><h1>TIMER</h1>\n      </header>\n      <div className=\"app__main\">\n        <button className=\"settings__showhide\" onClick={showHideSettings}>Hide Settings</button>\n        <div className=\"app__settings\">\n          <Settings roundLength={(state.roundLength/60).toString()} sendData={sendData} />\n          <NewUserForm addNewUser={name => sendData({type: 'new_user', name})} />\n        </div>\n        <div className=\"app__controls\">\n          <button onClick={() => sendData({ type: 'time', action: 'start' })}>Start timer</button>\n          <button enabled={(state.status !== 'stopped').toString()} onClick={e => {\n            if (state.status === 'running') {\n\n              sendData({ type: 'time', action: 'pause' })\n              e.target.textContent = 'Resume';\n            }\n            if (state.status === 'paused') {\n              sendData({ type: 'time', action: 'resume' })\n              e.target.textContent = 'Pause';\n            }}}>Pause</button>\n        </div>\n        <ul className=\"app__userList\">\n          {\n            state.users?.length ? state.users.map((user, key) => <User key={key} sendData={sendData} user={user} currentUser={state.currentUser} time={msToTimeString(state.currentTime)} />)\n            : <p className=\"userList__nousers\">Add users to begin!</p>\n          }\n        </ul>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const path = `${window.location.protocol}//${window.location.host}`;\nconst audio = new Audio(`${path}/ping.m4a`);\n\n// TODO: MOST OF THESE ACTIONS SHOULD NOW BE COMBINED INTO ONE CALL! case 'update_state': setState({ ...state, ...data.params });\n\nconst handleResponse = ({state, setState}, socket, data) => {\n  switch (data.type) {\n    case 'full_state': {\n      const session = JSON.parse(data.session);\n      setState(session);\n      var url = `${path}/?sessionId=${session.id}`;\n      window.history.pushState({ path: url }, '', url);\n      break;\n    }\n    case 'time_start': {\n      setState({...state, status: data.status, currentTime: data.currentTime, currentUser: data.currentUser});\n      break;\n    }\n    case 'time_end': {\n      setState({...state, status: data.status, currentTime: data.currentTime, currentUser: data.currentUser});\n      if (document.querySelector('#playSound').checked) audio.play();\n      break;\n    }\n    case 'time_pause': {\n      setState({...state, status: data.status, currentTime: data.currentTime});\n      break;\n    }\n    case 'time_resume': {\n      setState({...state, status: data.status, currentTime: data.currentTime});\n      break;\n    }\n    case 'time': {\n      setState({...state, currentTime: data.currentTime});\n      break;\n    }\n    case 'new_user': {\n      setState({...state, users: data.users});\n      break;\n    }\n    case 'remove_user': {\n      setState({...state, users: data.users});\n      break;\n    }\n    case 'set_round_length': {\n      setState({...state, roundLength: data.roundLength});\n      break;\n    }\n    case 'toggle_skip_user': {\n      setState({...state, users: data.users, currentTime: data.currentTime, currentUser: data.currentUser});\n      break;\n    }\n    default: return;\n  }\n};\n\nexport const ResponseHandler = (statePair, socket) => ({\n  handle: (response) => handleResponse(statePair, socket, response)\n});","const NewUserForm = ({addNewUser}) => {\n  const onSubmit = e => {\n    const nameInput = document.querySelector('#newUserName');\n    if (nameInput.value) addNewUser(nameInput.value);\n    nameInput.value = '';\n  }\n  return (\n    <div className=\"settings__newUserForm\">\n      <label htmlFor=\"newUserName\">Add a user:</label> <br />\n      <input type=\"text\" placeholder=\"Username\" name=\"newUserName\" maxLength=\"24\" onKeyPress={(e) => {if (e.key === 'Enter') onSubmit(e)}} id=\"newUserName\" />\n      <button onClick={onSubmit}> Add </button>\n    </div>\n  );\n}\n\nexport default NewUserForm;","const Settings = ({roundLength, sendData}) => {\n  const setRoundLength = () => {\n    const roundLengthInput = document.querySelector('#roundLengthInput');\n    const newLength = +roundLengthInput.value;\n    roundLengthInput.value = '';\n    if(typeof newLength === 'number') {\n      sendData({type: 'set_round_length', roundLength: newLength})\n    }\n  }\n\n  const onChangeRoundLengthInput = (e) => {\n    if (+e.target.value > 720)\n      e.target.value = 720;\n    if (+e.target.value < 0.05)\n      e.target.value = 0.05;\n  }\n\n  return (\n    <div className=\"app__settings__inner\">\n      <label htmlFor=\"roundLengthInput\">Round length in minutes:</label><br />\n      <input type=\"number\" placeholder={roundLength / 1000 || ''} onChange={onChangeRoundLengthInput} name=\"roundLengthInput\" id=\"roundLengthInput\" />\n      <button onClick={setRoundLength}>Set</button>\n      <p>Play Sound: <input type=\"checkbox\" id=\"playSound\" /></p>\n    </div>\n  )\n}\n\nexport default Settings;","const msToTimeString = ms => {\n  const minutes = Math.floor(ms / 60000);\n  const seconds = (ms % 60000) / 1000;\n  return `${minutes ? `${minutes}:` : ''}${seconds<10 ? `0${seconds}` : seconds}`\n}\n\nexport default msToTimeString;","\nconst User = ({user, sendData, currentUser, time}) => {\n  const toggleSkipUser = e => {\n    sendData({type: 'toggle_skip_user', userId: user.id})\n  }\n  return (\n    <li className=\"userList__entry\">\n      <div className=\"userList__left\">\n        <input type=\"checkbox\" checked={!user.skip} onChange={toggleSkipUser} />\n        {\n          currentUser?.id !== user.id\n          ? <p>{user.name}</p>\n          : <p className=\"userList__name userList__name--currentUser\">{user.name}</p>\n        }\n      </div>\n      <div className=\"userList__right\">\n        {currentUser.id === user.id ? <p className=\"userList__time\"> {time} </p>: ''}\n        <button className=\"userList__removeUser\" onClick={e => sendData({type: 'remove_user', userId: user.id})}>X</button>\n      </div>\n    </li>\n  )\n};\n\nexport default User;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}